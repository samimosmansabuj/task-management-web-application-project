[{"model": "admin.logentry", "pk": 1, "fields": {"action_time": "2024-01-04T19:18:38.225Z", "user": 1, "content_type": 8, "object_id": "1", "object_repr": "admin", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"User type\"]}}]"}}, {"model": "admin.logentry", "pk": 2, "fields": {"action_time": "2024-01-04T19:48:16.171Z", "user": 1, "content_type": 6, "object_id": "6", "object_repr": "Task Manager with REST API Using Python Django", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Description\"]}}]"}}, {"model": "auth.permission", "pk": 1, "fields": {"name": "Can add log entry", "content_type": 1, "codename": "add_logentry"}}, {"model": "auth.permission", "pk": 2, "fields": {"name": "Can change log entry", "content_type": 1, "codename": "change_logentry"}}, {"model": "auth.permission", "pk": 3, "fields": {"name": "Can delete log entry", "content_type": 1, "codename": "delete_logentry"}}, {"model": "auth.permission", "pk": 4, "fields": {"name": "Can view log entry", "content_type": 1, "codename": "view_logentry"}}, {"model": "auth.permission", "pk": 5, "fields": {"name": "Can add permission", "content_type": 2, "codename": "add_permission"}}, {"model": "auth.permission", "pk": 6, "fields": {"name": "Can change permission", "content_type": 2, "codename": "change_permission"}}, {"model": "auth.permission", "pk": 7, "fields": {"name": "Can delete permission", "content_type": 2, "codename": "delete_permission"}}, {"model": "auth.permission", "pk": 8, "fields": {"name": "Can view permission", "content_type": 2, "codename": "view_permission"}}, {"model": "auth.permission", "pk": 9, "fields": {"name": "Can add group", "content_type": 3, "codename": "add_group"}}, {"model": "auth.permission", "pk": 10, "fields": {"name": "Can change group", "content_type": 3, "codename": "change_group"}}, {"model": "auth.permission", "pk": 11, "fields": {"name": "Can delete group", "content_type": 3, "codename": "delete_group"}}, {"model": "auth.permission", "pk": 12, "fields": {"name": "Can view group", "content_type": 3, "codename": "view_group"}}, {"model": "auth.permission", "pk": 13, "fields": {"name": "Can add content type", "content_type": 4, "codename": "add_contenttype"}}, {"model": "auth.permission", "pk": 14, "fields": {"name": "Can change content type", "content_type": 4, "codename": "change_contenttype"}}, {"model": "auth.permission", "pk": 15, "fields": {"name": "Can delete content type", "content_type": 4, "codename": "delete_contenttype"}}, {"model": "auth.permission", "pk": 16, "fields": {"name": "Can view content type", "content_type": 4, "codename": "view_contenttype"}}, {"model": "auth.permission", "pk": 17, "fields": {"name": "Can add session", "content_type": 5, "codename": "add_session"}}, {"model": "auth.permission", "pk": 18, "fields": {"name": "Can change session", "content_type": 5, "codename": "change_session"}}, {"model": "auth.permission", "pk": 19, "fields": {"name": "Can delete session", "content_type": 5, "codename": "delete_session"}}, {"model": "auth.permission", "pk": 20, "fields": {"name": "Can view session", "content_type": 5, "codename": "view_session"}}, {"model": "auth.permission", "pk": 21, "fields": {"name": "Can add task", "content_type": 6, "codename": "add_task"}}, {"model": "auth.permission", "pk": 22, "fields": {"name": "Can change task", "content_type": 6, "codename": "change_task"}}, {"model": "auth.permission", "pk": 23, "fields": {"name": "Can delete task", "content_type": 6, "codename": "delete_task"}}, {"model": "auth.permission", "pk": 24, "fields": {"name": "Can view task", "content_type": 6, "codename": "view_task"}}, {"model": "auth.permission", "pk": 25, "fields": {"name": "Can add task_ photo", "content_type": 7, "codename": "add_task_photo"}}, {"model": "auth.permission", "pk": 26, "fields": {"name": "Can change task_ photo", "content_type": 7, "codename": "change_task_photo"}}, {"model": "auth.permission", "pk": 27, "fields": {"name": "Can delete task_ photo", "content_type": 7, "codename": "delete_task_photo"}}, {"model": "auth.permission", "pk": 28, "fields": {"name": "Can view task_ photo", "content_type": 7, "codename": "view_task_photo"}}, {"model": "auth.permission", "pk": 29, "fields": {"name": "Can add user", "content_type": 8, "codename": "add_custom_user"}}, {"model": "auth.permission", "pk": 30, "fields": {"name": "Can change user", "content_type": 8, "codename": "change_custom_user"}}, {"model": "auth.permission", "pk": 31, "fields": {"name": "Can delete user", "content_type": 8, "codename": "delete_custom_user"}}, {"model": "auth.permission", "pk": 32, "fields": {"name": "Can view user", "content_type": 8, "codename": "view_custom_user"}}, {"model": "contenttypes.contenttype", "pk": 1, "fields": {"app_label": "admin", "model": "logentry"}}, {"model": "contenttypes.contenttype", "pk": 2, "fields": {"app_label": "auth", "model": "permission"}}, {"model": "contenttypes.contenttype", "pk": 3, "fields": {"app_label": "auth", "model": "group"}}, {"model": "contenttypes.contenttype", "pk": 4, "fields": {"app_label": "contenttypes", "model": "contenttype"}}, {"model": "contenttypes.contenttype", "pk": 5, "fields": {"app_label": "sessions", "model": "session"}}, {"model": "contenttypes.contenttype", "pk": 6, "fields": {"app_label": "task", "model": "task"}}, {"model": "contenttypes.contenttype", "pk": 7, "fields": {"app_label": "task", "model": "task_photo"}}, {"model": "contenttypes.contenttype", "pk": 8, "fields": {"app_label": "account", "model": "custom_user"}}, {"model": "sessions.session", "pk": "1bde9hcud7dv7axbr0evfd536i17hf2g", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGln-26Gkzxms9XpNAiiW4qRC3B1HSgHSVG_ezJtF2Lcp7o3WOGd2ZZJdflkCfNJyFPkBy71yrMu2zokfCj_bxsea6XU73b-DCdrU1wqEKBgM2Qza-gGogMwuoezIZCwCvCY1OE8KlPOGMPSgN05bVwL7fAEBKzhs:1rLTeI:IU4qcHEh9VVUjNyz7NMlhxSaAbjtjXmwpfnaOeYvLyw", "expire_date": "2024-01-18T19:45:02.277Z"}}, {"model": "sessions.session", "pk": "b3ab3dir7g6yym8grolxfz6j98wpl5c7", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGln-26Gkzxms9XpNAiiW4qRC3B1HSgHSVG_ezJtF2Lcp7o3WOGd2ZZJdflkCfNJyFPkBy71yrMu2zokfCj_bxsea6XU73b-DCdrU1wqEKBgM2Qza-gGogMwuoezIZCwCvCY1OE8KlPOGMPSgN05bVwL7fAEBKzhs:1rLTAb:3bCaRBJk1t76ueiX8T4UmO6SkuSUkS9nsyOtzEwDbUA", "expire_date": "2024-01-18T19:14:21.199Z"}}, {"model": "sessions.session", "pk": "qbqnrj8zlbu79qo8v84nq0peaw05qzqd", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGln-26Gkzxms9XpNAiiW4qRC3B1HSgHSVG_ezJtF2Lcp7o3WOGd2ZZJdflkCfNJyFPkBy71yrMu2zokfCj_bxsea6XU73b-DCdrU1wqEKBgM2Qza-gGogMwuoezIZCwCvCY1OE8KlPOGMPSgN05bVwL7fAEBKzhs:1rLTAa:bRHReuuH5JoEr3Hn5oz0N94_5iln5TMxkLQ8pTIvg0U", "expire_date": "2024-01-18T19:14:20.704Z"}}, {"model": "sessions.session", "pk": "zkdxkcihi7xxnhp6t7ro167173o93p0p", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGln-26Gkzxms9XpNAiiW4qRC3B1HSgHSVG_ezJtF2Lcp7o3WOGd2ZZJdflkCfNJyFPkBy71yrMu2zokfCj_bxsea6XU73b-DCdrU1wqEKBgM2Qza-gGogMwuoezIZCwCvCY1OE8KlPOGMPSgN05bVwL7fAEBKzhs:1rLTEV:p7vz8PvGIym6SXrpOcYBmocLngzzgOFBOkUoaUQrzrE", "expire_date": "2024-01-18T19:18:23.471Z"}}, {"model": "task.task", "pk": 1, "fields": {"title": "Create a Notes web application with a REST API using Python Django", "description": "Create a Notes web application with a REST API using Python Django\r\n  - CRUD Operation - The application should allow multiple users to create, view, update, and delete notes\r\n  - Utilize Django templates for rendering views\r\n  - PostgreSQL for the database, and Django ORM for managing database relations.\r\n  - Additionally, use virtual environments, environment variables, and Git for proper development practices.\r\n  -\r\n\r\nCreate API views to list all notes, retrieve a single notes, create a new notes, update an\r\nexisting notes, and delete a notes.\r\n  - Implement appropriate serializers for converting data to and from JSON format.\r\n  - Ensure the API views handle appropriate HTTP methods (GET, POST, PUT/PATCH,\r\nDELETE). Validate input data and handle errors appropriately.", "due_date": "2024-01-09T00:00:00Z", "priority": "High", "created_date": "2024-01-04T19:19:26.261Z", "updated_date": "2024-01-05", "is_complete": false, "task_project_link": null, "task_complete_user": null, "task_complete_comment": null}}, {"model": "task.task", "pk": 2, "fields": {"title": "Create a Notes web application with a REST API using Python Django", "description": "Create a Notes web application with a REST API using Python Django\r\n  - CRUD Operation - The application should allow multiple users to create, view, update, and delete tasks\r\n  - Utilize Django templates for rendering views\r\n  - PostgreSQL for the database, and Django ORM for managing database relations.\r\n  - Additionally, use virtual environments, environment variables, and Git for proper development practices.", "due_date": "2024-01-15T13:23:00Z", "priority": "Medium", "created_date": "2024-01-04T19:23:28.120Z", "updated_date": "2024-01-05", "is_complete": false, "task_project_link": null, "task_complete_user": null, "task_complete_comment": null}}, {"model": "task.task", "pk": 3, "fields": {"title": "Create a Student Database Management System web application", "description": "Create a Student Database Management System web application with a REST API using Python Django\r\n  - CRUD Operation - The application should allow multiple users to create, view, update, and delete tasks\r\n  - Multiple User Type like Student, Teacher, Employee, Adminstrator, Admin etc.\r\n  - Utilize Django templates for rendering views, Create Base Template And extends all template with common element\r\n  - PostgreSQL for the database, and Django ORM for managing database relations.\r\n  - Additionally, use virtual environments, environment variables, and Git for proper development practices.\r\n\r\n\r\nCreate API views to list all data, retrieve a single data, create a new data, update an\r\nexisting data, and delete a data.\r\n  - Implement appropriate serializers for converting data to and from JSON format.\r\n  - Ensure the API views handle appropriate HTTP methods (GET, POST, PUT/PATCH,\r\nDELETE). Validate input data and handle errors appropriately", "due_date": "2024-01-20T12:00:00Z", "priority": "High", "created_date": "2024-01-04T19:29:13.715Z", "updated_date": "2024-01-05", "is_complete": false, "task_project_link": null, "task_complete_user": null, "task_complete_comment": null}}, {"model": "task.task", "pk": 4, "fields": {"title": "Create a Blog Website With Python Django", "description": "Create a Team Blog Website With Python Django\r\n  - CRUD Operation - The application should allow multiple users to create, view, update, and delete\r\n  - Multiple User Type like Team Member, Employee, Admin etc. And Use Custom Model\r\n  - Create Many type of model like Education, Certificate, Work Experience, Skills, Profile Etc.\r\n  - Utilize Django templates for rendering views, Create Base Template And extends all template with common element\r\n  - PostgreSQL for the database, and Django ORM for managing database relations.\r\n  - Additionally, use virtual environments, environment variables, and Git for proper development practices.", "due_date": "2024-01-30T14:00:00Z", "priority": "High", "created_date": "2024-01-04T19:32:11.303Z", "updated_date": "2024-01-05", "is_complete": false, "task_project_link": null, "task_complete_user": null, "task_complete_comment": null}}, {"model": "task.task", "pk": 5, "fields": {"title": "Create a Social Media web application With REST API Using Django", "description": "Create a Social Media web application With REST API Using Django\r\n  - CRUD Operation - The application should allow multiple users to create, view, update, and delete user, And Custom User\r\n  - Utilize Django templates for rendering views, Create Base Template And extends all template with common element\r\n  - PostgreSQL for the database, and Django ORM for managing database relations.\r\n  - Additionally, use virtual environments, environment variables, and Git for proper development practices.\r\n\r\n\r\nCreate API views to list all data, retrieve a single data, create a new data, update an\r\nexisting data, and delete a data.\r\n  - Implement appropriate serializers for converting data to and from JSON format.\r\n  - Ensure the API views handle appropriate HTTP methods (GET, POST, PUT/PATCH,\r\nDELETE). Validate input data and handle errors appropriately", "due_date": "2024-01-11T01:36:00Z", "priority": "Low", "created_date": "2024-01-04T19:36:52.158Z", "updated_date": "2024-01-05", "is_complete": false, "task_project_link": null, "task_complete_user": null, "task_complete_comment": null}}, {"model": "task.task", "pk": 6, "fields": {"title": "Task Manager with REST API Using Python Django", "description": "Description: Create a task management web application with a REST API using Django. The\r\napplication should allow multiple users to create, view, update, and delete tasks. Utilize Django\r\ntemplates for rendering views, PostgreSQL for the database, and Django ORM for managing\r\ndatabase relations. Additionally, use virtual environments, environment variables, and Git for proper\r\ndevelopment practices.\r\n\r\nWork procedure (Very important to follow):\r\n1. Use Git for version control:\r\n  - Initialize an empty Git repository, and have an initial commit with a README.md\r\n  - Update .gitignore to ignore IDE files, variable files, bytecodes, or others.\r\n  - Commit your code regularly as you progress through the project.\r\n2. Use environment variables for sensitive settings:\r\n  - Create a separate file for environment variables (e.g., .env or .env.example).\r\n  - Include settings such as database credentials, API keys, or any other sensitive\r\ninformation in the environment variable file.\r\n  - Configure Django to read these environment variables for the project's settings.\r\n3. Documentation:\r\n  - Populate the README file that explains how to set up and run the project.\r\n  - Include instructions on how to set up the environment variables and their usage.\r\n  - Document the API endpoints and their usage in the README file.\r\n4. Finally:\r\n  - Create at least three users and a few tasks for each user having tasks with various\r\npriorities and images. Use realistic data for all fields.\r\n  - Export all data from the database to JSON fixtures and include them in the git commit", "due_date": "2024-01-05T03:00:00Z", "priority": "Medium", "created_date": "2024-01-04T19:39:00.809Z", "updated_date": "2024-01-05", "is_complete": true, "task_project_link": "https://github.com/samimosmansabuj/task-management-web-application-project", "task_complete_user": 1, "task_complete_comment": ""}}, {"model": "task.task_photo", "pk": 2, "fields": {"tast": 1, "image": "task_photo/python_ai_picture_01.jpeg"}}, {"model": "task.task_photo", "pk": 3, "fields": {"tast": 1, "image": "task_photo/python_ai_picture_02.jpeg"}}, {"model": "task.task_photo", "pk": 4, "fields": {"tast": 2, "image": "task_photo/python_ai_picture_03.jpeg"}}, {"model": "task.task_photo", "pk": 5, "fields": {"tast": 2, "image": "task_photo/python_ai_picture_04.jpeg"}}, {"model": "task.task_photo", "pk": 6, "fields": {"tast": 3, "image": "task_photo/python_ai_picture_05.jpeg"}}, {"model": "task.task_photo", "pk": 7, "fields": {"tast": 3, "image": "task_photo/python_ai_picture_06.jpeg"}}, {"model": "task.task_photo", "pk": 8, "fields": {"tast": 4, "image": "task_photo/python_ai_picture_07.jpeg"}}, {"model": "task.task_photo", "pk": 9, "fields": {"tast": 4, "image": "task_photo/python_ai_picture_08.jpeg"}}, {"model": "task.task_photo", "pk": 10, "fields": {"tast": 5, "image": "task_photo/python_ai_picture_09.jpeg"}}, {"model": "task.task_photo", "pk": 11, "fields": {"tast": 5, "image": "task_photo/python_ai_picture_10.jpeg"}}, {"model": "task.task_photo", "pk": 12, "fields": {"tast": 6, "image": "task_photo/python_ai_picture_11.jpeg"}}, {"model": "task.task_photo", "pk": 13, "fields": {"tast": 6, "image": "task_photo/python_ai_picture_12.jpeg"}}, {"model": "account.custom_user", "pk": 1, "fields": {"password": "pbkdf2_sha256$720000$krGkn6sca9yhKKaKB3VRl6$XNpn5r/i4PjxxsQYBVMEO7rvxiKg6dx1nr8NYxfbUN4=", "last_login": "2024-01-04T19:45:02.215Z", "is_superuser": true, "username": "admin", "first_name": "", "last_name": "", "email": "admin@gmail.com", "is_staff": true, "is_active": true, "date_joined": "2024-01-04T18:56:47Z", "phone_number": null, "user_type": "Admin", "profile_picture": "", "otp": null, "groups": [], "user_permissions": []}}, {"model": "account.custom_user", "pk": 2, "fields": {"password": "pbkdf2_sha256$720000$6faj9C2mH7jYkmALTPgKDH$Qdm93FHD8Nf68TuRCQM/6WPybtmI0eK60oejrbIuLGw=", "last_login": "2024-01-04T19:00:56.847Z", "is_superuser": false, "username": "samimregular", "first_name": "Samim", "last_name": "Regular User", "email": "samim.o.sabuj03@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2024-01-04T19:00:48.047Z", "phone_number": "01775155760", "user_type": "Regular Users", "profile_picture": "user/profile_picture/20230822_191734-min.jpg", "otp": null, "groups": [], "user_permissions": []}}, {"model": "account.custom_user", "pk": 3, "fields": {"password": "pbkdf2_sha256$720000$GkKEVVTB5ogBdoNVDkuLp4$8S5tiolNrzbqpebwzi2/ewE5ykKQ6Ho7sOxD7qXST60=", "last_login": "2024-01-04T19:05:01.920Z", "is_superuser": false, "username": "samimemployee", "first_name": "Samim", "last_name": "Employee", "email": "samim.o.sabuj02@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2024-01-04T19:04:46.590Z", "phone_number": "01775155760", "user_type": "Employee", "profile_picture": "user/profile_picture/image_short-min.jpg", "otp": null, "groups": [], "user_permissions": []}}, {"model": "account.custom_user", "pk": 4, "fields": {"password": "pbkdf2_sha256$720000$voJsM9waFEP6naZLeIDU2f$0w4DfZp94udGeS01wWv5oN0rTrAi0ItcJbIKLMT8dJw=", "last_login": "2024-01-04T19:14:06.354Z", "is_superuser": false, "username": "samimadmin", "first_name": "Samim", "last_name": "Admin", "email": "samim.o.sabuj01@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2024-01-04T19:06:28.684Z", "phone_number": "01775155760", "user_type": "Admin", "profile_picture": "user/profile_picture/picture_01-min.jpg", "otp": null, "groups": [], "user_permissions": []}}]